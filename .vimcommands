---------------INTRODUCTION-----------------
" If you using a small device like laptop, tablet or a custom keybord,
" most likely some commands will give You a hard time to trigger them at once.
" 
" Fortunately for Us, we can hit them one by one.





-------------Commands outside vim------------------
ctags -R 		"Create tags recursively (very useful to find quickly any method)





-------------Vimrc commands------------------
:PluginInstall		"Install plugins specified in Vundle.vim (which is vim plugin manager) 





--------------Normal mode--------------------
:tabc      		"Close tab 
:so %      		"Save source output of a current file
:ls        		"Show a list of files available in bufer 
:bp        		"Load previous file from bufer
:bd			"Destroy current buffer
:bd + number		"Destroy buffer with given number
:b+number        	"Load file from bufer witch has a given number  (use :ls to see available list of files in bufer)
:sbuffer+number		"Make a split by putting in a split specific file from buffer (use :ls to find a file number)
:vsp       		"Vertical window split
:sp        		"Horizontal split
ctrl + w _ 		"Max out the height of the current split
ctrl + w | 		"Max out the width of the current 
ctrl + w = 		"Normalize all split sizes, which is very handy when resizing terminal
:e.	   		"Opens current directory structure
,space 			"Remove select highlight
ctrl + P 		"Search for a file (This is a mapped command by using custom search plugin)
d + i + )		"Delete everything inside brackets
d + i + '		"Delete everything inside quotes
:tag methodName		"Find quickly method by methodname (it works only if ctags -R executed before)
:! command		"Execute shell commands from inside vim 
:tn 			"Go to next tag
:tp			"Go to previous tag
:ts			"Show a list with all available tag usage 
ctrl + ]		"Go to method definition
:s/text/replaceText	"At first we need to select entire line/s, then we type a command. 
			"Command will find all occurences of text and then will replace it with replaceText.
:Gsearch		"Execute a search
:Greplace		"Replace whatever we change with Gsearch command
:wa			"Write all files
cs symbol replacement   "cs (change surrounding) symbol (what we want to change) replacement
ds symbol		"Delete surrounding symbol (for example ds ' -> will delete surrounding single quotes)
dst 			"Delete surrounding tag (very usefull when working with html tags for example to delete surrounding divs)
sst			"Change surrounding tag (if we would like to replace exisitng tag with something else)"
<leader>nf		"Expands the class name under the cursor to its fully qualified name
<leader>n		"Automatically adds the corresponding use statement for the class under the cursor.
shift + j 		"Join two lines into one line. (Cursor must be on the first line, so when we trigger this command then second line will be moved into the first one.)
<leader>pf 		"Trigger php-cs-fixer. Format php code according to psr-2 standard
ctrl + 6 		"Go to previous file
ctrl + e 		"Show a list with previous open files. It makes easy to switch between recently open files
ctrl + o 		"Jumps to your previous edit point sequentialy
ctrl + i 		"Jumps to your next edit point sequentialy (oposite of ctrl + o)
m + markLetter 		"Create a mark by using specific letter (If you use small letter as a mark then You can use this mark within a file)
m + capitalLetter       "Create a mark available globally
:marks 			"Show a list with available marks (marks are like pointers within a files)
' + smallMarkLetter  	"Within a file press single quote with mark letter to move cursor to your created mark. 
' + capitalMarkLetter 	"Move cursor to Your created mark from any file You wish. (global access)
` + ' + capitalLetter 	"Move cursor to marked exact possition
. 			"Repeats a last operation




------------Visual mode----------------------
zz        		"Center current line on the screen
V			"Select entire line
v			"Begin character-based visual selection
c			"Change selected text
y			"Yank copy selected text
d 			"Delete selected text
p			"Paste after the cursor
P			"Paste befor the cursor
"+y			"Copy selected text outside vim (Yank text into the "clipboard register")
i + ' 			"Select everything inside quotes
i + )			"Select everything inside brackets
i + {			"Select everything inside method body
:sort			"Sort selected values in alphabetic order
<leader>su		"Sort use statements by the length of the lines
ctrl + d 		"Select block of code 
d 			"Stop selection
j 			"Every time is pressed, then new line is selected (use d to stop selection)



------------Insert mode----------------------
Hit snippet shortcut and press type to load your custom snippets
:Ctrl+n 		"Triggers autocompletion
TAB 			"Trigger autocompletion
shift + v 		"Switch to visual mode 


